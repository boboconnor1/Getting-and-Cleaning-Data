find.package("devtools")
install.packages("devtools")
library(devtools)
find.package("devtools")
install.packages("devtools")
install.packages("devtools")
library(devtools)
find_rtools()
swirl()
library(swirl)
swirl
swirl()
exit
library(xlsx)
install.packages("xlsx")
library(xlsx)
setwd("C:/Users/bob/Desktop/DATA SCIENCE/Data Cleaning Course")
con=url("http://cheryloconnor.weebly.com/about.html")
htmlCode=readLines(con)
close(con)
htmlCode
library(XML)
url <- "http://cheryloconnor.weebly.com/about.html"
htmk <- htmkTreeParse(url,useInternalNodes=T)
htmk <- htmlTreeParse(url,useInternalNodes=T)
xpathSApply(html,"//title",xmlValue)
xpathSApply(htmk,"//title",xmlValue)
?connections
install.packages("foreign")
install.packages("RPostgreSQL")
install.packages("RODBC")
install.packages("RMongo")
install.packages("manipulate")
install.packages("rmongodb")
install.packages("jpeg")
install.packages("readbitmap")
install.packages("png")
install.packages("rgeos")
install.packages("raster")
install.packages("tuneR")
install.packages("seewave")
install.packages("rgdal")
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("github", key="6f6c6b7e3e1005e88de4", secret="00682d481f469983b685ce9964b246dfafbbd577")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
install.packages("httpuv")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
req <- GET("https://api.github.com/users/jtleek/repos")
stop_for_status(req
)
a <- content(req)
a
a[4]
a[5]
a[6]
library(sqldf)
install.packages("sqldf")
library(sqldf)
acsdata <- read.csv("./getdata-data-ss06pid.csv", header=T, sep=",")
get(wd)
getwd()
acsdata <- read.csv("./data/ACSdata.csv", header=T, sep=",")
head(acsdata)
sqldf("select pwgtp1 from acs where AGEP < 50")
sqldf("select pwgtp1 from acsdata where AGEP < 50")
sqldf("select wgtp1 from acsdata where AGEP < 50")
acsdata <- read.csv("./data/2006.csv", header=T, sep=",")
head(acsdata)
sqldf("select pwgtp1 from acsdata where AGEP < 50")
unique(acsdata$AGEP)
sqldf("select unique * from acsdata")
sqldf("select distinct AGEP from acsdata")
sqldf("select AGEP where unique from acsdata")
sqldf("select unique AGEP from acsdata")
myurl <- "http://biostat.jhsph.edu/~jleek/contact.html"
con <- url(myurl)
htmlCode <- readLines(con)
close(con)
sapply(htmlCode[c(10, 20, 30, 100)], nchar)
?nchar
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"
download.file(fileUrl, "./data/Q5.for", method = "curl")
download.file(fileUrl, "./data/Q5.for")
data <- read.csv("./data/Q5.for", header=T)
head(data)
dim(data)
file_name <- "./data/q5.for"
df <- read.fwf(file=file_name,widths=c(-1,9,-5,4,4,-5,4,4,-5,4,4,-5,4,4), skip=4)
head(df)
sum(df[, 4])
install.packages("Hmisc")
install.packages("reshape2")
library(swirl)
install_from_swirl("Getting and Cleaning Data")
install.packages("swir")
install.packages("swirl")
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl
swirl()
r.version.string
